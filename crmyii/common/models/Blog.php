<?php

namespace common\models;

use backend\models\UserBackend;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "blog".
 *
 * @property integer $id
 * @property string $title
 * @property string $content
 * @property string $created_at
 * @property integer $views
 * @property integer $is_delete
 * @property string $update_at
 */
class Blog extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public $fenlei;
    public static function tableName()
    {
        return 'blog';
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->on(self::EVENT_BEFORE_INSERT,[$this,'beforeinsert']);
        $this->on(self::EVENT_AFTER_INSERT,[$this,'afterinsert']);
    }

    public function beforeinsert($event){
        yii::info('This is beforeInsert event.');

    }
    public function afterinsert($event){
        yii::info('This is afterInsert event.');
    }
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return
        [
            TimestampBehavior::className(),
        ];
    }

    public function rules()
    {
        return [
            [['title','demourl','content','fenlei'],'required'],
            [['content'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['views', 'is_delete'], 'integer'],
            [['title'], 'string', 'max' => 100],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '接口名称',
            'demourl'=>'演示',
            'content' => '接口内容',
            'created_at' => '创建时间',
            'views' => 'Views',
            'is_delete' => 'Is Delete',
            'updated_at' => '最后修改时间',
        ];
    }

    public static function bumenlist(){
        $list=UserBackend::find()->all();
        return $list?ArrayHelper::map($list,'id','name'):[];
    }
}
